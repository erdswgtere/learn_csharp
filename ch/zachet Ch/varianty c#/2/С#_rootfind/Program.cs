/*****************************************************
******************************************************
**                                                  **
**  Программа вычисления корня функции с заданной   **
**  точностью методом дихотомии.                    **
**                                                  **
**  Описание входных и выходных данных:             **
**  a - первая граница отрезка                      **
**  b - вторая граница отрезка                      **
**  eps - погрешность 10^-6(0,000001)               **
**  n - счётчик итераций                            **
**  Вывод:                                          **
**  n - счётчик итераций                            **
**  x - уточнённый корень                           **
**                                                  **
**                                                  ** 
**  Выполнил: студент 2 курса ЕПК гр.               **
**                                                  ** 
**  Проверил: преподаватель (числ. мет.) Фомин А. Т.**
**                                                  **
******************************************************
*****************************************************/
// НЕ ЗАБУДЬ ДОПИСАТЬ ГРУППУ И СВОЁ ИМЯ В ШАПКУ!
// НЕ ЗАБУДЬ УДАЛИТЬ ЭТИ КОМЕНТАРИИ (КРОМЕ ШАПКИ:))!
double f(double x){
    double y;
    y = Math.Pow(x, 3)+ 2 * Math.Pow(x, 2)- 15*x - 36; // тут задать свою функци.
    return y;
}
double a, b, c, eps, x; // тут ввод границ отрезка(где есть корень, корень находится там где график пересекает ось X, короче лучше его построить и посмотреть) если не будет возможности построить график в каком нибудь онлайн калькуляторе можно построить в файле октавы рядом.
Console.Write("(первая граница)a = "); // желательно проверить корень ещё и в других методах(если тут неверно то вводите a и b наоборот(первым b вторым a либо вводите отрезок для поиска корня с самой минимальной разницой(посчитать его через root_ot)))
a = Convert.ToDouble(Console.ReadLine());
Console.Write("(вторая граница)b = ");
b = Convert.ToDouble(Console.ReadLine());
Console.Write("(точность вычислений)eps = ");
eps = Convert.ToDouble(Console.ReadLine());
int n = 0; // счётчик кол - ва итераций
do {
    c = (a + b) / 2;
    if(f(a) * f(c) < 0){
        b = c;
    } else{
        a = c;
    }
    n++;
} while(Math.Abs(b - a) > eps);
x = (a + b) / 2;
Console.WriteLine($"x = {x:f4}, n = {n:f2}");
